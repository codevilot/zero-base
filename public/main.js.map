{"version":3,"sources":["../src/main.js"],"names":["RandomCountUp","reloadBrowser","getRandomCount","FPS","MIN","MAX","TARGET_COUNT","count","document","title","container","getElementById","ReactDomRoot","ReactDOM","createRoot","querySelector","render","isComplete","animate","clearInterval","clearIntervalId","console","log","setInterval"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAMA,IAAMC,GAAG,GAAG,EAAZ;AAEA,IAAMC,GAAG,GAAG,EAAZ;AACA,IAAMC,GAAG,GAAG,EAAZ;AACA,IAAMC,YAAY,GAAGJ,cAAc,CAACE,GAAD,EAAMC,GAAN,CAAnC;AAEA,IAAIE,KAAK,GAAG,CAAZ;AAEAC,QAAQ,CAACC,KAAT,SAAqBH,YAArB,UAAsCE,QAAQ,CAACC,KAA/C;AAEA,IAAMC,SAAS,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAAlB;AACA,IAAMC,YAAY,GAAGC,QAAQ,CAACC,UAAT,CAAoBJ,SAApB,CAArB;AAEAT,aAAa,CAACO,QAAQ,CAACO,aAAT,CAAuB,eAAvB,CAAD,CAAb;;AAEA,SAASC,MAAT,CAAgBT,KAAhB,EAAuBU,UAAvB,EAAmC;AACjCL,EAAAA,YAAY,CAACI,MAAb,CACE,oBAAC,KAAD,CAAO,UAAP,QACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAET,KAAtB;AAA6B,IAAA,UAAU,EAAEU;AAAzC,IADF,CADF;AAKD;;AAED,SAASC,OAAT,GAAmB;AAGjBX,EAAAA,KAAK,IAAI,CAAT;AAEA,MAAIU,UAAU,GAAGV,KAAK,IAAID,YAA1B;AACAU,EAAAA,MAAM,CAACT,KAAD,EAAQU,UAAR,CAAN;;AACA,MAAIA,UAAJ,EAAgB;AACdE,IAAAA,aAAa,CAACC,eAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF;;AAED,IAAIF,eAAe,GAAGG,WAAW,CAACL,OAAD,EAAU,OAAOf,GAAjB,CAAjC","sourcesContent":["import { RandomCountUp } from './components/RandomCountUp.js';\r\nimport { reloadBrowser } from './helpers/reloadBrowser.js';\r\nimport { getRandomCount } from './helpers/getRandomCount.js';\r\n\r\n\r\n// FPS = Frame per Seconds\r\n// 24~30 FPS\r\n// 60 FPS\r\nconst FPS = 30;\r\n\r\nconst MIN = 30;\r\nconst MAX = 60;\r\nconst TARGET_COUNT = getRandomCount(MIN, MAX);\r\n\r\nlet count = 0;\r\n\r\ndocument.title = `(${TARGET_COUNT}) ${document.title}`;\r\n\r\nconst container = document.getElementById('root');\r\nconst ReactDomRoot = ReactDOM.createRoot(container);\r\n\r\nreloadBrowser(document.querySelector('.reloadButton'));\r\n\r\nfunction render(count, isComplete) {\r\n  ReactDomRoot.render(\r\n    <React.StrictMode>\r\n      <RandomCountUp count={count} isComplete={isComplete} />\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nfunction animate() {\r\n  // animate 함수가 호출될 때 마다 수행해야 할 것?\r\n  // count 값 변화\r\n  count += 1;\r\n  // 파생(derived) 상태\r\n  let isComplete = count >= TARGET_COUNT;\r\n  render(count, isComplete);\r\n  if (isComplete) {\r\n    clearInterval(clearIntervalId);\r\n    console.log('animation completed');\r\n  }\r\n}\r\n\r\nlet clearIntervalId = setInterval(animate, 1000 / FPS);\r\n"],"file":"main.js"}